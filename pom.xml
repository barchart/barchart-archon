<!--

    Copyright (C) 2011-2012 Barchart, Inc. <http://www.barchart.com />

    All rights reserved. Licensed under the OSI BSD License.

    http://www.opensource.org/licenses/bsd-license.php

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.barchart.base</groupId>
	<artifactId>barchart-archon</artifactId>
	<version>2.2.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://www.barchart.com/</url>
	<name>${project.artifactId}</name>
	<description>${project.artifactId}</description>
	<inceptionYear>2011</inceptionYear>

	<organization>
		<name>Barchart, Inc.</name>
		<url>http://www.barchart.com/</url>
	</organization>

	<licenses>
		<license>
			<name>The BSD License</name>
			<url>http://www.opensource.org/licenses/bsd-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>

		<developer>
			<id>barchart</id>
			<name>Barchart, Inc.</name>
			<email>http://www.barchart.com/</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>

	</developers>

	<mailingLists>
		<mailingList>
			<name>barchart</name>
			<post>tag : barchart</post>
			<subscribe>http://stackoverflow.com/users/login</subscribe>
			<archive>http://stackoverflow.com/tags/barchart</archive>
		</mailingList>
	</mailingLists>

	<scm>
		<url>https://github.com/barchart/barchart-archon</url>
		<connection>scm:git:git://github.com/barchart/barchart-archon.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/barchart/barchart-archon.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- barchart required version -->
		<barchartJavaVersion>1.6</barchartJavaVersion>
		<barchartScalaVersion>2.9.2</barchartScalaVersion>
		<barchartMavenVersion>3.0.4</barchartMavenVersion>

		<!-- barchart private repository -->
		<amazonActiveRepo>activate-via-profile</amazonActiveRepo>
		<amazonReleaseRepo>maven.aws.barchart.com</amazonReleaseRepo>
		<amazonStagingRepo>maven.aws-dev.barchart.com</amazonStagingRepo>

		<!-- barchart public repository -->
		<sonatypeArchonURL>https://oss.sonatype.org/content/groups/public</sonatypeArchonURL>
		<sonatypeReleaseURL>https://oss.sonatype.org/content/repositories/releases</sonatypeReleaseURL>
		<sonatypeSnapshotsURL>https://oss.sonatype.org/content/repositories/snapshots</sonatypeSnapshotsURL>
		<sonatypeStagingURL>https://oss.sonatype.org/service/local/staging/deploy/maven2/</sonatypeStagingURL>

		<!-- barchart private repository -->
		<barchartArchonURL>https://nexus.barchart.com/content/groups/archon</barchartArchonURL>
		<barchartReleaseURL>https://nexus.barchart.com/content/repositories/releases</barchartReleaseURL>
		<barchartSnapshotsURL>https://nexus.barchart.com/content/repositories/snapshots</barchartSnapshotsURL>

		<!-- to include in jar manifest -->
		<barchartBuildUser>${user.name}</barchartBuildUser>

		<!-- see maven-release-plugin -->
		<releaseProfiles />
		<releaseNestedArguments>-Dresume=false</releaseNestedArguments>
		<releasePrepareGoals>clean verify</releasePrepareGoals>
		<releasePerformGoals>deploy</releasePerformGoals>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- MAIN -->

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${barchartScalaVersion}</version>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>4.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>4.3.0</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.1</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.6</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.0.7</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.7</version>
			</dependency>

			<!-- TEST -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.7</version>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.1</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5-rc1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<extensions>

			<!-- enable amazon bucket transport -->
			<extension>
				<groupId>org.kuali.maven.wagons</groupId>
				<artifactId>maven-s3-wagon</artifactId>
				<version>1.1.14</version>
			</extension>

		</extensions>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>

				<plugin>
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>1.10.b1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>1.0-beta-4</version>
				</plugin>

				<plugin>
					<groupId>org.kuali.maven.plugins</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>1.0.3</version>
				</plugin>

				<plugin>
					<groupId>org.kuali.maven.plugins</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.3.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-patch-plugin</artifactId>
					<version>1.1.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>${barchartJavaVersion}</source>
						<target>${barchartJavaVersion}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
				</plugin>

				<!-- keep in sync with <reporting> -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8.1</version>
					<configuration>
						<quiet>true</quiet>
						<show>protected</show>
						<linksource>true</linksource>
						<windowtitle><![CDATA[${project.artifactId}-${project.version} / ${barchartTimeISO}]]></windowtitle>
						<doctitle><![CDATA[${project.artifactId}-${project.version} / ${barchartTimeISO}]]></doctitle>
						<header><![CDATA[<a href="${project.url}" target="_blank">${project.artifactId}</a><br>${project.version} / ${barchartTimeISO}]]></header>
						<footer><![CDATA[<a href="${project.url}" target="_blank">${project.artifactId}</a><br>${project.version} / ${barchartTimeISO}]]></footer>
						<bottom><![CDATA[Copyright © {inceptionYear}-{currentYear} <a href="${project.organization.url}" target="_blank">${project.organization.name}</a>. All Rights Reserved.]]></bottom>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>1.4</version>
				</plugin>

				<!-- support both junit and testng -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.2</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>2.12.2</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-testng</artifactId>
							<version>2.12.2</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<plugin>
					<groupId>org.scala-tools</groupId>
					<artifactId>maven-scala-plugin</artifactId>
					<version>2.15.2</version>
					<configuration>
						<scalaVersion>${barchartScalaVersion}</scalaVersion>
						<sendJavaToScalac>false</sendJavaToScalac>
						<checkMultipleScalaVersions>false</checkMultipleScalaVersions>
						<jvmArgs>
							<jvmArg>-Xms64m</jvmArg>
							<jvmArg>-Xmx1024m</jvmArg>
						</jvmArgs>
					</configuration>
					<executions>
						<!-- compile java first, scala second -->
						<execution>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<scalaVersion>${barchartScalaVersion}</scalaVersion>
						<jvmArgs>
							<jvmArg>-Xms64m</jvmArg>
							<jvmArg>-Xmx1024m</jvmArg>
						</jvmArgs>
					</configuration>
					<executions>
						<!-- compile java first, scala second -->
						<execution>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>groovy-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.1.1</version>
					<executions>
						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${barchartMavenVersion}</version>
										<message><![CDATA[you must have mavenVersion >= ${barchartMavenVersion}]]></message>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>

						<!-- invocataion: release:prepare -->
						<preparationGoals>${releasePrepareGoals}</preparationGoals>

						<!-- invocataion: release:perform -->
						<useReleaseProfile>true</useReleaseProfile>
						<goals>${releasePerformGoals}</goals>
						<releaseProfiles>${releaseProfiles}</releaseProfiles>

						<!-- nested invocation arguments for both release:prepare and release:perform -->
						<arguments>${releaseNestedArguments}</arguments>

					</configuration>
				</plugin>

				<!-- generate osgi scr component descriptors -->
				<plugin>
					<groupId>com.carrotgarden.maven</groupId>
					<artifactId>carrot-maven-scr-plugin</artifactId>
					<version>1.1.4</version>
					<configuration>
						<targetDirectorySCR>OSGI-INF/service-component</targetDirectorySCR>
						<excludedServices>
							<service>scala.ScalaObject</service>
							<service>java.lang.Runnable</service>
							<service>java.io.Serializable</service>
						</excludedServices>
						<eclipseSettings>
							<!-- eclipse maven console settings -->
							<logBuildTimes>true</logBuildTimes>
							<logExcludedServices>true</logExcludedServices>
							<logInvocationDetails>true</logInvocationDetails>
							<logErrorTraces>true</logErrorTraces>
							<logComponentDescriptors>true</logComponentDescriptors>
						</eclipseSettings>
					</configuration>
					<executions>
						<execution>
							<id>clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
						<execution>
							<id>generate</id>
							<phase>process-classes</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- include osgi scr component descriptors -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.7</version>
					<configuration>
						<instructions>
							<Service-Component>OSGI-INF/service-component/*.xml</Service-Component>
						</instructions>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

		<!-- build plugins active by default -->
		<plugins>

			<!-- enforce maven version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- enforce java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- generate osgi scr component descriptors -->
			<plugin>
				<groupId>com.carrotgarden.maven</groupId>
				<artifactId>carrot-maven-scr-plugin</artifactId>
			</plugin>

			<!-- enable osgi bundle packaging -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

			<!-- provide custom properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>provide-custom-properties</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
		<![CDATA[
		//
		import java.text.MessageFormat;
		//
		barchartTimeLong = System.currentTimeMillis();
		project.properties["barchartTimeLong"] = barchartTimeLong;
		println("### barchartTimeLong=" + barchartTimeLong);
		//
		barchartTimeFile = MessageFormat.format("{0,date,yyyy-MM-dd_HH-mm-ss}",barchartTimeLong);
		project.properties["barchartTimeFile"] = barchartTimeFile;
		println("### barchartTimeFile=" + barchartTimeFile);
		//
		barchartTimeISO=MessageFormat.format("{0,date,yyyy-MM-dd'T'HH:mm:ss.SSSZ}",barchartTimeLong);
		project.properties["barchartTimeISO"] = barchartTimeISO;
		println("### barchartTimeISO=" + barchartTimeISO);
		//
		barchartTimeYear=MessageFormat.format("{0,date,yyyy}",barchartTimeLong);
		project.properties["barchartTimeYear"] = barchartTimeYear;
		println("### barchartTimeYear=" + barchartTimeYear);
		//
		]]>
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<!-- ================================ -->

		<!-- see maven-release-plugin -->
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>performRelease</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ================================ -->

		<!-- private barchart buckets -->
		<profile>
			<id>amazon-release</id>
			<properties>
				<amazonActiveRepo>${amazonReleaseRepo}</amazonActiveRepo>
			</properties>
		</profile>
		<profile>
			<id>amazon-staging</id>
			<properties>
				<amazonActiveRepo>${amazonStagingRepo}</amazonActiveRepo>
			</properties>
		</profile>

		<!-- private barchart amazon distribution -->
		<profile>
			<id>barchart-amazon-distribution</id>
			<activation>
				<file>
					<exists>maven-amazon.md</exists>
				</file>
			</activation>
			<distributionManagement>
				<repository>
					<id>com.barchart.maven.s3.release</id>
					<url>s3://${amazonReleaseRepo}</url>
				</repository>
				<snapshotRepository>
					<id>com.barchart.maven.s3.staging</id>
					<url>s3://${amazonStagingRepo}</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>

		<!-- private barchart amazon repository -->
		<profile>
			<id>barchart-amazon-repository</id>
			<activation>
				<file>
					<exists>maven-amazon.md</exists>
				</file>
			</activation>
			<properties>
				<amazonBucketHost>s3.amazonaws.com</amazonBucketHost>
			</properties>
			<repositories>
				<repository>
					<id>com.barchart.maven.http.release</id>
					<name>Barchart Amazon Releases</name>
					<url>https://${amazonBucketHost}/${amazonReleaseRepo}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
				<repository>
					<id>com.barchart.maven.http.staging</id>
					<name>Barchart Amazon Snapshots</name>
					<url>https://${amazonBucketHost}/${amazonStagingRepo}</url>
					<releases>
						<enabled>false</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
		</profile>

		<!-- ================================ -->

		<!-- private barchart nexus distribution; must activate -->
		<profile>
			<id>barchart-nexus-distribution</id>
			<activation>
				<file>
					<exists>maven-barchart.md</exists>
				</file>
			</activation>
			<distributionManagement>
				<snapshotRepository>
					<id>barchart-nexus-snapshots</id>
					<name>Barchart Nexus Snapshots</name>
					<url>${barchartSnapshotsURL}</url>
				</snapshotRepository>
				<repository>
					<id>barchart-nexus-releases</id>
					<name>Barchart Nexus Releases</name>
					<url>${barchartReleaseURL}</url>
				</repository>
			</distributionManagement>
		</profile>

		<!-- private barchart nexus repository; must activate -->
		<profile>
			<id>barchart-nexus-repository</id>
			<activation>
				<file>
					<exists>maven-barchart.md</exists>
				</file>
			</activation>
			<repositories>
				<repository>
					<id>barchart-nexus-archon</id>
					<name>Barchart Nexus Archon / Regular</name>
					<url>${barchartArchonURL}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>barchart-nexus-archon</id>
					<name>Barchart Nexus Archon / Plugins</name>
					<url>${barchartArchonURL}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>

		</profile>

		<!-- ================================ -->

		<!-- public barchart nexus distribution; must activate -->
		<profile>
			<id>sonatype-nexus-distribution</id>
			<activation>
				<file>
					<exists>maven-central.md</exists>
				</file>
			</activation>
			<distributionManagement>
				<snapshotRepository>
					<id>sonatype-nexus-snapshots</id>
					<name>Sonatype Nexus Snapshots</name>
					<url>${sonatypeSnapshotsURL}</url>
				</snapshotRepository>
				<repository>
					<id>sonatype-nexus-staging</id>
					<name>Sonatype Nexus Staging</name>
					<url>${sonatypeStagingURL}</url>
				</repository>
			</distributionManagement>
		</profile>

		<!-- public barchart nexus repository; always active -->
		<profile>
			<id>sonatype-nexus-repository</id>
			<activation>
				<property>
					<name>!sonatype-nexus-repository</name>
				</property>
			</activation>
			<repositories>
				<repository>
					<id>sonatype-nexus-archon</id>
					<name>Sonatype Nexus Archon / Regular</name>
					<url>${sonatypeArchonURL}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>sonatype-nexus-archon</id>
					<name>Sonatype Nexus Archon / Plugins</name>
					<url>${sonatypeArchonURL}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>

		<!-- ================================ -->

		<!-- license editor -->
		<profile>
			<id>license</id>
			<properties>

				<licenseSource>src/license</licenseSource>
				<licenseTarget>target/license</licenseTarget>
				<licenseFile>license-osi-bsd.txt</licenseFile>

				<licenseYear>${project.inceptionYear}-${barchartTimeYear}</licenseYear>
				<licenseName>${project.organization.name}</licenseName>
				<licenseMail>${project.organization.url}</licenseMail>

				<licenseGroupId>com.barchart.base</licenseGroupId>
				<licenseArtifactId>barchart-archon-license</licenseArtifactId>
				<licenseVersion>RELEASE</licenseVersion>

			</properties>
			<build>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>license-unpack</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${licenseGroupId}</groupId>
											<artifactId>${licenseArtifactId}</artifactId>
											<version>${licenseVersion}</version>
											<type>jar</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${licenseTarget}</outputDirectory>
									<overWriteIfNewer>true</overWriteIfNewer>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.mycila.maven-license-plugin</groupId>
						<artifactId>maven-license-plugin</artifactId>
						<configuration>
							<header>${licenseTarget}/${licenseFile}</header>
							<properties>
								<year>${licenseYear}</year>
								<name>${licenseName}</name>
								<mail>${licenseMail}</mail>
							</properties>
							<strictCheck>true</strictCheck>
							<useDefaultMapping>false</useDefaultMapping>
							<useDefaultExcludes>false</useDefaultExcludes>
							<mapping>
								<!-- custom -->
								<md>XML_STYLE</md>
								<ant>XML_STYLE</ant>
								<scala>JAVADOC_STYLE</scala>
								<gitignore>SCRIPT_STYLE</gitignore>
								<conf>SCRIPT_STYLE</conf>
								<cfg>SCRIPT_STYLE</cfg>
								<properties>SCRIPT_STYLE</properties>
								<!-- default -->
								<java>JAVADOC_STYLE</java>
								<groovy>JAVADOC_STYLE</groovy>
								<js>JAVADOC_STYLE</js>
								<css>JAVADOC_STYLE</css>
								<xml>XML_STYLE</xml>
								<dtd>XML_STYLE</dtd>
								<xsd>XML_STYLE</xsd>
								<html>XML_STYLE</html>
								<htm>XML_STYLE</htm>
								<xsl>XML_STYLE</xsl>
								<fml>XML_STYLE</fml>
								<apt>DOUBLETILDE_STYLE</apt>
								<properties>SCRIPT_STYLE</properties>
								<sh>SCRIPT_STYLE</sh>
								<txt>TEXT</txt>
								<bat>BATCH</bat>
								<cmd>BATCH</cmd>
								<sql>DOUBLEDASHES_STYLE</sql>
								<jsp>DYNASCRIPT_STYLE</jsp>
								<ftl>FTL</ftl>
								<xhtml>XML_STYLE</xhtml>
								<vm>SHARPSTAR_STYLE</vm>
								<jspx>XML_STYLE</jspx>
							</mapping>
							<includes>
								<entry>**</entry>
							</includes>
							<excludes>
								<!-- custom -->
								<entry>**/${licenseSource}/**</entry>
								<entry>**/*.template</entry>
								<entry>**/*.json</entry>
								<!-- // Miscellaneous typical temporary files -->
								<entry>**/*~</entry>
								<entry>**/#*#</entry>
								<entry>**/.#*</entry>
								<entry>**/%*%</entry>
								<entry>**/._*</entry>
								<entry>**/.repository/**</entry>
								<!-- // CVS -->
								<entry>**/CVS</entry>
								<entry>**/CVS/**</entry>
								<entry>**/.cvsignore</entry>
								<!-- // RCS -->
								<entry>**/RCS</entry>
								<entry>**/RCS/**</entry>
								<!-- // SCCS -->
								<entry>**/SCCS</entry>
								<entry>**/SCCS/**</entry>
								<!-- // Visual SourceSafe -->
								<entry>**/vssver.scc</entry>
								<!-- // Subversion -->
								<entry>**/.svn</entry>
								<entry>**/.svn/**</entry>
								<!-- // Arch -->
								<entry>**/.arch-ids</entry>
								<entry>**/.arch-ids/**</entry>
								<!-- // Bazaar -->
								<entry>**/.bzr</entry>
								<entry>**/.bzr/**</entry>
								<!-- // SurroundSCM -->
								<entry>**/.MySCMServerInfo</entry>
								<!-- // Mac -->
								<entry>**/.DS_Store</entry>
								<!-- // Serena Dimensions Version 10 -->
								<entry>**/.metadata</entry>
								<entry>**/.metadata/**</entry>
								<!-- // Mercurial -->
								<entry>**/.hg</entry>
								<entry>**/.hg/**</entry>
								<!-- // git -->
								<entry>**/.git</entry>
								<entry>**/.git/**</entry>
								<!-- // BitKeeper -->
								<entry>**/BitKeeper</entry>
								<entry>**/BitKeeper/**</entry>
								<entry>**/ChangeSet</entry>
								<entry>**/ChangeSet/**</entry>
								<!-- // darcs -->
								<entry>**/_darcs</entry>
								<entry>**/_darcs/**</entry>
								<entry>**/.darcsrepo</entry>
								<entry>**/.darcsrepo/**</entry>
								<entry>**/-darcs-backup*</entry>
								<entry>**/.darcs-temp-mail</entry>
								<!-- // maven project's temporary files -->
								<entry>**/target/**</entry>
								<entry>**/test-output/**</entry>
								<entry>**/release.properties</entry>
								<entry>**/pom.xml.*</entry>
								<entry>**/dependency-reduced-pom.xml</entry>
								<!-- // code coverage tools -->
								<entry>**/cobertura.ser</entry>
								<entry>**/.clover/**</entry>
								<!-- // eclipse project files -->
								<entry>**/.classpath</entry>
								<entry>**/.project</entry>
								<entry>**/.settings/**</entry>
								<!-- // IDEA projet files -->
								<entry>**/*.iml</entry>
								<entry>**/*.ipr</entry>
								<entry>**/*.iws</entry>
								<!-- // descriptors -->
								<entry>**/MANIFEST.MF</entry>
								<!-- // binary files - images -->
								<entry>**/*.jpg</entry>
								<entry>**/*.png</entry>
								<entry>**/*.gif</entry>
								<entry>**/*.ico</entry>
								<entry>**/*.bmp</entry>
								<entry>**/*.tiff</entry>
								<entry>**/*.tif</entry>
								<entry>**/*.cr2</entry>
								<entry>**/*.xcf</entry>
								<!-- // binary files - programs -->
								<entry>**/*.class</entry>
								<entry>**/*.exe</entry>
								<entry>**/*.bin</entry>
								<!-- // checksum files -->
								<entry>**/*.md5</entry>
								<entry>**/*.sha1</entry>
								<!-- // binary files - archives -->
								<entry>**/*.jar</entry>
								<entry>**/*.zip</entry>
								<entry>**/*.rar</entry>
								<entry>**/*.tar</entry>
								<entry>**/*.tar.gz</entry>
								<entry>**/*.tar.bz2</entry>
								<entry>**/*.gz</entry>
								<!-- // binary files - documents -->
								<entry>**/*.doc</entry>
								<entry>**/*.xls</entry>
								<entry>**/*.csv</entry>
								<entry>**/*.pdf</entry>
								<entry>**/*.odt</entry>
								<entry>**/*.ods</entry>
								<entry>**/*.odp</entry>
								<entry>**/*.odb</entry>
								<entry>**/*.odg</entry>
								<entry>**/*.odf</entry>
								<entry>**/*.mm</entry>
								<entry>**/*.dia</entry>
								<entry>**/*.log</entry>
								<!-- // ServiceLoader files -->
								<entry>**/META-INF/services/**</entry>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>license-format</id>
								<phase>process-resources</phase>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!-- ================================ -->

	</profiles>

	<reporting>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>


			<!-- keep in sync with <build> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<quiet>true</quiet>
					<show>protected</show>
					<linksource>true</linksource>
					<windowtitle><![CDATA[${project.artifactId}-${project.version} / ${barchartTimeISO}]]></windowtitle>
					<doctitle><![CDATA[${project.artifactId}-${project.version} / ${barchartTimeISO}]]></doctitle>
					<header><![CDATA[<a href="${project.url}" target="_blank">${project.artifactId}</a><br>${project.version} / ${barchartTimeISO}]]></header>
					<footer><![CDATA[<a href="${project.url}" target="_blank">${project.artifactId}</a><br>${project.version} / ${barchartTimeISO}]]></footer>
					<bottom><![CDATA[Copyright © {inceptionYear}-{currentYear} <a href="${project.organization.url}" target="_blank">${project.organization.name}</a>. All Rights Reserved.]]></bottom>
				</configuration>
			</plugin>

		</plugins>

	</reporting>

</project>
